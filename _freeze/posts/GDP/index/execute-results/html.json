{
  "hash": "2ae4779f3aeb261d5690c23839f42bdd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"世界GDP\"\nsubtitle: \"Global GDP\"\nauthor: \"Tony D\"\ndate: \"2025-04-24\"\n\ncategories: \n  - AI\n  - R\n  - Python\n\n  \nexecute:\n  warning: false\n  error: false\n  eval: false\n  \n\nimage: 'images/download.jpg'\n\n\n---\n\nThis document demonstrates how to download and analyze global GDP data using R, utilizing the `wbstats` and `WDI` packages to retrieve and visualize various indicators from the World Bank.\n\nThis document provides a guide to downloading and analyzing global GDP data using R. It demonstrates how to use the `wbstats` and `WDI` packages to retrieve a variety of economic indicators from the World Bank, including GDP, GDP per capita, and the sectoral contributions of agriculture, industry, and services to GDP. The document includes R code for data acquisition, cleaning, and creating visualizations to compare the economic performance of different countries over time. The Python section is a placeholder for future content.\n\n# R\n\nwrite R code to download annual world GDP data , include gdp,gdp per capita,year,sector,country name\n\n\n## wbstats package\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"wbstats\")\nlibrary(wbstats)\nlibrary(ggplot2)\nlibrary(tidyverse)\n```\n:::\n\n\ndata from World Bank:https://data.worldbank.org/indicator/NY.GDP.MKTP.CD\n\n::: {.cell}\n\n```{.r .cell-code}\nindustry_search_results <- wbsearch(pattern = \"% of GDP\")\nprint(industry_search_results)\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the indicators you want to download\n# \"NY.GDP.MKTP.CD\" for GDP (current US$)\n# \"NY.GDP.PCAP.CD\" for GDP per capita (current US$)\n\n#NV.AGR.TOTL.ZS Agriculture, forestry, and fishing, value added (% of GDP)\n#NV.IND.TOTL.ZS Industry (including construction), value added (% of GDP)\n#NV.SRV.TOTL.ZS Services, value added (% of GDP)\ngdp_indicators <- c(\"NY.GDP.MKTP.CD\", \"NY.GDP.PCAP.CD\",\n                    \"NV.AGR.TOTL.ZS\",\"NV.IND.TOTL.ZS\",\"NV.SRV.TOTL.ZS\" )\n\n\n# Download the data\nworld_gdp_data <- wb_data(\n  indicator = gdp_indicators,\n  start_date = 2000, # You can change the start and end years as needed\n  end_date = 2023\n)\n\n# Print the first few rows of the data to see the structure\nhead(world_gdp_data)\n\n# You can also use summary() to get a quick overview of the data\nsummary(world_gdp_data)\n\n# To get the data with country names, you can merge with wb_countries()\n#world_gdp_data_with_names <- merge(world_gdp_data, wb_countries(), by = \"country_code\", all.x = TRUE)\n\n# Print the first few rows of the merged data\n#head(world_gdp_data_with_names)\n\n# Clean up the column names\nworld_gdp_data_with_names <- world_gdp_data %>%\n  rename(\n    GDP = NY.GDP.MKTP.CD,\n    GDP_per_capita = NY.GDP.PCAP.CD,\n    \n    Agriculture_of_GDP=NV.AGR.TOTL.ZS,\n    Industry_of_GDP=NV.IND.TOTL.ZS,\n    Services_of_GDP=NV.SRV.TOTL.ZS,\n    Year = date,\n    Country_Name = country\n  )\n\n# Select only the columns you need\nfinal_gdp_data <- world_gdp_data_with_names %>%mutate(total=Agriculture_of_GDP+Industry_of_GDP+Services_of_GDP)\n  \n\n# Print the first few rows of the final data\nhead(final_gdp_data)\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the line chart\n\nchina_thailand_data=final_gdp_data |> filter(Country_Name %in% c(\"China\", \"Thailand\",\"United States\",\"Japan\",\"Korea, Rep.\")) |> mutate(Year=as.numeric(Year))\n\ngdp_per_capita_plot <- ggplot(data = china_thailand_data, aes(x = Year, y = Services_of_GDP, color = Country_Name)) +\n  geom_line(size = 1) +\n  labs(\n    title = \"Services_of_GDP: China vs Thailand vs US\",\n    #subtitle = \"Services_of_GDP\",\n    x = \"Year\",\n    y = \"Services_of_GDP\",\n    color = \"Country_Name\"\n  ) +\n  theme_minimal() +\n  theme(\n    text = element_text(size = 12),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5)\n  )\n\ngdp_per_capita_plot\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngdp_per_capita_plot <- ggplot(data = china_thailand_data, aes(x = Year, y = GDP_per_capita, color = Country_Name)) +\n  geom_line(size = 1) +\n  labs(\n    title = \"GDP Per Capita: China vs Thailand\",\n    subtitle = \"Comparison of GDP per Capita (current US$)\",\n    x = \"Year\",\n    y = \"GDP Per Capita (USD)\",\n    color = \"Country_Name\"\n  ) +\n  theme_minimal() +\n  theme(\n    text = element_text(size = 12),\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5)\n  )\n\ngdp_per_capita_plot\n```\n:::\n\n\n## WDI package\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(WDI)\nlibrary(ggplot2)\nlibrary(tidyverse)\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Download GDP data from World Bank\ngdp_data <- WDI(\n  country = \"all\",\n  indicator = c(\n    gdp = \"NY.GDP.MKTP.CD\",               # GDP (current US$)\n    gdp_per_capita = \"NY.GDP.PCAP.CD\",    # GDP per capita (current US$)\n    agriculture = \"NV.AGR.TOTL.ZS\",       # Agriculture value added (% of GDP)\n    industry = \"NV.IND.TOTL.ZS\",          # Industry value added (% of GDP)\n    services = \"NV.SRV.TOTL.ZS\"           # Services value added (% of GDP)\n  ),\n  start = 2000,\n  end = 2023,\n  extra = TRUE\n)\n```\n:::\n\n\n\n\n\n# Python\n\n## IMF\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}