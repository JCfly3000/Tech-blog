{
  "hash": "628c93a8381fd833346cd50311de6213",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R pacakge download and managment tool\"\n\nauthor: \"Tony D\"\nexecute:\n  warning: false\n  error: false\n  eval: false\n\n  \ndate: \"2025-03-14\"\ncategories: \n  - Tool\n  - R\n  \nimage: \"my screenshots.png\"\n\n---\n\n\npak installs R packages from CRAN, Bioconductor, GitHub, URLs, git repositories, local files and directories. It is an alternative to install.packages() and devtools::install_github(). pak is fast, safe and convenient.\n\n# R packages download and managment tool\n\n## install pak\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"pak\")\n```\n:::\n\n## load pak\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pak)\n```\n:::\n\n## check pak version\n::: {.cell}\n\n```{.r .cell-code}\npak_sitrep() \n```\n:::\n\n## install pacakge from cran\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_install(\"tibble\")\n```\n:::\n\n# install pacakge  from github\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_install(\"tidyverse/tibble\")\n```\n:::\n\n## install pacakge file tar.gz from website\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_install(\n  \"url::https://cran.r-project.org/src/contrib/Archive/tibble/tibble_3.1.7.tar.gz\"\n)\n```\n:::\n\n\n\n## uninstall package\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_remove(\"tibble\")\n```\n:::\n\n\n\n## check package\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_deps_tree(\"tibble\")\n```\n:::\n## show all Dependencies\n::: {.cell}\n\n```{.r .cell-code}\npkg_deps(\"tibble\")\n```\n:::\n\n\n## Explain dependencies\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_deps_explain(\"tibble\", \"rlang\")\n```\n:::\n\n## check pacakge history on cran\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_history(\"tibble\")\n```\n:::\n\n\n## update package\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_install(\"tibble\")\n```\n:::\n\nUpdate all dependencies of a package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npkg_install(\"tibble\", upgrade = TRUE)\n```\n:::\n\n\n# Check R pacakge info on Cran\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pak)\npkg_install(\"cranlogs\")\n```\n:::\n\n## total pacakge download from last week\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cranlogs)\ncran_downloads(when = \"last-week\")\n```\n:::\n\n\n\n## total pacakge download from 2014\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=cran_downloads(from = \"2014-01-01\", to = \"2024-12-31\")\nlibrary(plotly)\nplot_ly(data, x = ~date, y = ~count, mode = \"lines\")\n```\n:::\n\n\n## top pacakge download from last week\n\n::: {.cell}\n\n```{.r .cell-code}\ncran_top_downloads(\"last-week\")\n```\n:::\n\n## one pacakge download from last week\n\n::: {.cell}\n\n```{.r .cell-code}\npacakge_name=\"tibble\"\nlastweek=cran_downloads(when = \"last-week\", package = pacakge_name)\nlastweek\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(paste(pacakge_name,\"last week been downloaded\",sum(lastweek$count),\"times\"))\n```\n:::\n\n# check pacakge github info\n\nthere is another R package for this `gh`\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(cranlogs)\nlibrary(ggrepel)\nlibrary(scales)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(stringr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# authenticate to github -------------------------------------------------------\n# use Hadley's key and secret\nmyapp <- oauth_app(\"github\",\n                   key = \"Ov23lizHQuHjLsuQlgXc\",\n                   secret = \"44ee97da2b3fc85c02bf46b236d1f23739945c8e\")\ngithub_token <- oauth2.0_token(oauth_endpoints(\"github\"), myapp)\ngtoken <- config(token = github_token)\n\n\ndate_without_zeros <- function(x){\n  gsub(\"0(\\\\d)\", \"\\\\1\", format(x, \"%m/%d/%y\"))\n}\n\ngh_from_url <- function(x){\n  x <- gsub(\"http://\", \"https://\", tolower(x))\n  x <- gsub(\"www\\\\.github\\\\.com\", \"github.com\", x)\n  x <- gsub(\"^github.com\", \"https://github.com\", x)\n  x <- gsub(\"/issues\", \"\", x)\n  x <- gsub(\"\\\\.git\", \"\", x)\n  x <- gsub(\"For source code, development versions and issue tracker see\", \"\", x, ignore.case=TRUE)\n  x <- trimws(x)\n  x <- gsub(\"development versions and issue tracker see \", \"\", x, ignore.case=TRUE)\n  x <- trimws(x)\n  x <- gsub(\"^<(.*)>$\", \"\\\\1\", x)\n  if(grepl(',', x)){\n    x <- strsplit(x, \",\")[[1]]\n    x <- trimws(x[min(which(grepl('http://github.com|https://github.com|http://www.github.com', x)))])\n  }\n  if(grepl(' ', x)){  \n    x <- strsplit(x, \" \")[[1]]\n    x <- trimws(x[min(which(grepl('http://github.com|https://github.com|http://www.github.com', x)))])    \n  }\n  x <- gsub(\"^(.*)/(.*)#\\\\([a-zA-z]+\\\\)\\\\b\", \"\\\\1/\\\\2\", x)\n  x <- gsub(\"^(.*)/(.*)[[:space:]]+\\\\([a-zA-z]+\\\\)\\\\b\", \"\\\\1/\\\\2\", x)\n  x <- gsub(\"^(.*) http(.*)$\", \"http\\\\2\", x)\n  x <- trimws(x)\n  x <- gsub(\"/$\", \"\", x)\n  x <- trimws(x)\n  return(x)\n}\n\naut_maintainer_from_details <- function(x){\n  x <- gsub(\"'|\\\"\", \"\", x)\n  if(grepl(',', x)){\n    x <- strsplit(x, \"\\\\],\")[[1]]\n    aut_cre_ind <- grepl(pattern='\\\\[aut, cre|\\\\[cre, aut|\\\\[cre', x, ignore.case=TRUE)\n    if(any(aut_cre_ind)){\n      x <- x[min(which(aut_cre_ind))]\n      x <- gsub(\"\\\\[aut, cre|\\\\[cre, aut|\\\\[cre\", \"\", x)\n    }\n    x <- strsplit(x, \",\")[[1]][1]\n    x <- trimws(gsub(\"\\\\]\", \"\", x))\n    x <- trimws(gsub(\" \\\\[aut\", \"\", x))\n  }\n  x <- trimws(gsub(\" \\\\(.*\\\\)$\", \"\", x))\n  x <- trimws(gsub(\" <.*>$\", \"\", x))\n  return(x)\n}\n\ngh_star_count <- function(url){\n  Sys.sleep(0.5)\n  stars  <- tryCatch({\n    this_url <- gsub(\"https://github.com/\", \"https://api.github.com/repos/\", url)\n    req <- GET(this_url, gtoken)\n    stop_for_status(req)\n    cont <- content(req)\n    cont$stargazers_count  \n  }, error = function(e){\n    return(NA_integer_)\n  })\n  return(stars)\n}\n\ngh_forks_count <- function(url){\n  Sys.sleep(0.5)\n  stars  <- tryCatch({\n    this_url <- gsub(\"https://github.com/\", \"https://api.github.com/repos/\", url)\n    req <- GET(this_url, gtoken)\n    stop_for_status(req)\n    cont <- content(req)\n    cont$forks  \n  }, error = function(e){\n    return(NA_integer_)\n  })\n  return(stars)\n}\n\n\n\n\ngh_last_commit_date <- function(url){\n  last_commit <- tryCatch({\n    this_url <- gsub(\"https://github.com/\", \"https://api.github.com/repos/\", url)\n    req <- GET(paste0(this_url, \"/commits?page=1&per_page=1\"), gtoken)\n    stop_for_status(req)\n    cont <- content(req)\n    cont[[1]]$commit$committer$date\n  }, error = function(e){\n    return(NA_character_)\n  })\n  return(last_commit)\n}\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngithub_url=\"https://github.com/r-lib/styler\"\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngh_star_count(github_url)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngh_last_commit_date(github_url)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngh_last_commit_date(github_url)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngh_watches_count(github_url)\n```\n:::\n\n\n\n\n\n# Tool for build a R pacakge\n\ndevtools/roxygen2/usethis/testthat/pkgdown\n\n\n\n# reference:\n\nhttps://github.com/r-lib/pak",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}