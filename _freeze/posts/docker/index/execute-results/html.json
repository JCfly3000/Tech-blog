{
  "hash": "283f31a1e260dee93b6a8c2861622162",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Docker使用介绍\"\nsubtitle: \"Docker intro\"\nauthor: \"Tony D\"\ndate: \"2025-03-24\"\n\ncategories: \n  - Tool\n\n  \nimage: \"images/1_2QYim4bJ9LyO1pziQNJXMA.jpg\"\n\nexecute:\n  warning: false\n  error: false\n  eval: false\n---\n\nDocker intro\n\n![](images/my screenshots 1.png)\n\n# Download docker\n\nhttps://www.docker.com/\n\n# Login docker hub\n\nhttps://hub.docker.com/\n\n# check docker version\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker --version\n```\n:::\n\n# open docker app and check docker info\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker info\n```\n:::\n\n# dowload docker image from docker hub\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker pull alpine\n```\n:::\n\n# list all download docker image\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker images\n```\n:::\n\n\n# run docker from image\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker run alpine\n```\n:::\n\n\n# list all running docker containers \n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker ps\n```\n:::\n\n\n\n# list all docker containers which running or run before\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker ps -a --size\n```\n:::\n\n\n# run docker alpine linux terminal in mac\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker run -it --rm alpine /bin/ash\n```\n:::\n\n\n\n\n# Docker file\n\n\nA Dockerfile is a text file with instructions to build a Docker Image\n\nWhen we run a Dockerfile, Docker image is created\n\nWhen we run the docker image, containers are created\n\nThere is a example to bulid a Rstudio Docker with tidyverse\n\n## create Docker file\n\n\n::: {.cell filename='tidyverse_4.3.3.Dockerfile'}\n\n```{.r .cell-code}\nFROM docker.io/library/ubuntu:jammy\n\nENV R_VERSION=\"4.3.3\"\nENV R_HOME=\"/usr/local/lib/R\"\nENV TZ=\"Etc/UTC\"\n\nCOPY scripts/install_R_source.sh /rocker_scripts/install_R_source.sh\nRUN /rocker_scripts/install_R_source.sh\n\nENV CRAN=\"https://p3m.dev/cran/__linux__/jammy/2024-04-23\"\nENV LANG=en_US.UTF-8\n\nCOPY scripts/bin/ /rocker_scripts/bin/\nCOPY scripts/setup_R.sh /rocker_scripts/setup_R.sh\nRUN /rocker_scripts/setup_R.sh\n\nCOPY scripts/install_tidyverse.sh /rocker_scripts/install_tidyverse.sh\nRUN /rocker_scripts/install_tidyverse.sh\n\nENV S6_VERSION=\"v2.1.0.2\"\nENV RSTUDIO_VERSION=\"2023.12.1+402\"\nENV DEFAULT_USER=\"rstudio\"\n\nCOPY scripts/install_rstudio.sh /rocker_scripts/install_rstudio.sh\nCOPY scripts/install_s6init.sh /rocker_scripts/install_s6init.sh\nCOPY scripts/default_user.sh /rocker_scripts/default_user.sh\nCOPY scripts/init_set_env.sh /rocker_scripts/init_set_env.sh\nCOPY scripts/init_userconf.sh /rocker_scripts/init_userconf.sh\nCOPY scripts/pam-helper.sh /rocker_scripts/pam-helper.sh\nRUN /rocker_scripts/install_rstudio.sh\n\nEXPOSE 8787\nCMD [\"/init\"]\n\nCOPY scripts/install_pandoc.sh /rocker_scripts/install_pandoc.sh\nRUN /rocker_scripts/install_pandoc.sh\n\nCOPY scripts/install_quarto.sh /rocker_scripts/install_quarto.sh\nRUN /rocker_scripts/install_quarto.sh\n\nCOPY scripts /rocker_scripts\n```\n:::\n\n\n\n\n## bulid Docker image from dockerfile\n::: {.cell}\n\n```{.bash .cell-code}\ndocker build -f tidyverse_4.3.3.Dockerfile -t proj:myapp .\n```\n:::\n\n\n\n\n## run Docker image\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker run -p 8787:8787 proj:myapp\n```\n:::\n\n\n\nrun at backend\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker run -d proj:myapp\n```\n:::\n\nRstuido server is open at: http://localhost:8787/\n\nuser name is rstudio\n\npassword is show on terminal\n\n## go inside docker containers with containers id\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker exec -it b28a1b8eeeb6 sh\n```\n:::\n\nexit docker linux\n\n::: {.cell}\n\n```{.bash .cell-code}\nexit\n```\n:::\n\n## stop container with container id\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker stop b28a1b8eeeb6 \n```\n:::\n\n\n## restart container with container id\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker start b28a1b8eeeb6\n```\n:::\n\n## delete a stop container\n::: {.cell}\n\n```{.bash .cell-code}\ndocker rm -f b28a1b8eeeb6\n```\n:::\n\n## delete image with image id\n\n::: {.cell}\n\n```{.bash .cell-code}\ndocker rmi -f 7e1a4e2d11e2\n```\n:::\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}