{
  "hash": "0e09102d8c1746ed3b002838fe31456c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Make QR code\"\n\nauthor: \"Tony D\"\ndate: \"2025-03-16\"\ncategories: \n  - Tool\n  - R\n  - Python\n  \nimage: \"some_file.png\"\n---\n\nMaking QR code with R and Python\n\n\n# R\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install('qrcode')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nℹ Loading metadata database\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ Loading metadata database ... done\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nℹ No downloads are needed\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ 1 pkg + 1 dep: kept 2 [3.5s]\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(qrcode)\ncode=qr_code(\"https://rfor.us/posit2024slides\") \n```\n:::\n\n\nSave the QR code as a SVG file\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_svg(code, filename = \"qr.svg\")\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(code)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Python\n\n::: {.cell}\n\n```{.python .cell-code}\n!pip install qrcode scikit-image\n```\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport qrcode\nimg = qrcode.make(\"https://rfor.us/posit2024slides\")\ntype(img)  # qrcode.image.pil.PilImage\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class 'qrcode.image.pil.PilImage'>\n```\n\n\n:::\n:::\n\nsave the QR code as a PNG file\n\n::: {.cell}\n\n```{.python .cell-code}\nimg.save(\"some_file.png\")\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom skimage import io\nimg = io.imread(\"some_file.png\")\nio.imshow(img)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}