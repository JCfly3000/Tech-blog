{
  "hash": "4ef50197c1fdf51de77870ff1fb74d5c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Make QR code\"\nauthor: \"Tony D\"\ndate: \"2025-03-16\"\ncategories: \n  - Tool\n  - R\n  - Python\n  \nimage: \"some_file.png\"\n---\n\nA guide to generating QR codes in R and Python.\n\nThis document demonstrates how to generate QR codes using both R and Python. It provides code examples for creating QR codes from a given string, saving them as SVG or PNG files, and displaying them. The R section uses the `qrcode` package, while the Python section uses the `qrcode` and `scikit-image` libraries.\n\n\n\n\n# R\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install('qrcode')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\nuse_python(\"/Library/Frameworks/Python.framework/Versions/3.13/bin/python3.13\")\npy_require(c('qrcode','Pillow','numpy','scikit-image'))\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(qrcode)\ncode=qr_code(\"https://rfor.us/posit2024slides\") \n```\n:::\n\n\nSave the QR code as a SVG file\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_svg(code, filename = \"qr.svg\")\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(code)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Python\n\n::: {.cell}\n\n```{.python .cell-code}\n!pip install qrcode scikit-image\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport platform\nprint(platform.python_version())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n3.13.2\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport qrcode\nimg = qrcode.make(\"https://rfor.us/posit2024slides\")\ntype(img)  # qrcode.image.pil.PilImage\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class 'qrcode.image.pil.PilImage'>\n```\n\n\n:::\n:::\n\nsave the QR code as a PNG file\n\n::: {.cell}\n\n```{.python .cell-code}\nimg.save(\"some_file.png\")\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom skimage import io\nimg = io.imread(\"some_file.png\")\nio.imshow(img)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}