{
  "hash": "84dcc51758afb8bf7908fa49101536c4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Python code optimization with ruff\"\nauthor: \"Tony D\"\nexecute:\n  warning: false\n  error: false\n\n  \ndate: \"2025-03-14\"\ncategories: \n  - Tool\n  - Python\n  \nimage: \"images.png\"\njupyter: python3\n---\n\n-   ‚ö°Ô∏è 10-100x faster than existing linters (like Flake8) and formatters (like Black)\n\n-   üêç Installable via `pip`\n\n-   üõ†Ô∏è `pyproject.toml` support\n\n![](images/clipboard-548506117.png)\n\n# install ruff\n\n``` {.python filename=\"playing.py\"}\n#| eval: false\npip install ruff\n```\n\n# check code\n\nbefore correct python file\n\n``` {.python filename=\"playing.py\"}\n\n\n\n\n\nimport pandas\n\nfrom importlib.metadata import version\n\nprint('test.py is running')\nprint('version is :')\nprint(version('rich'))\n\na=3+1\n\n\na\n\n```\n\n::: {#f10dc3ee .cell filename='Terminal' execution_count=1}\n``` {.python .cell-code}\n!ruff check playing.py\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nplaying.py:6:8: F401 [*] `pandas` imported but unused\r\n  |\r\n6 | import pandas\r\n  |        ^^^^^^ F401\r\n7 |\r\n8 | from importlib.metadata import version\r\n  |\r\n  = help: Remove unused import: `pandas`\r\n\r\nFound 1 error.\r\n[*] 1 fixable with the `--fix` option.\r\n```\n:::\n:::\n\n\n# fix code\n\n::: {#b4de82f6 .cell filename='Terminal' execution_count=2}\n``` {.python .cell-code}\n!ruff check playing.py --fix\n```\n:::\n\n\nafter fix\n\n::: {#39f04458 .cell filename='Terminal' execution_count=3}\n``` {.python .cell-code}\nimport pandas\n\nfrom importlib.metadata import version\n\nprint('test.py is running')\nprint('version is :')\nprint(version('rich'))\n\na=3+1\n\n\na\n\n```\n:::\n\n\n# format code\n\n::: {#1b6dc6de .cell filename='Terminal' execution_count=4}\n``` {.python .cell-code}\n!ruff format playing.py\n```\n:::\n\n\nafter format\n\n::: {#214e7d8b .cell filename='Terminal' execution_count=5}\n``` {.python .cell-code}\nimport pandas\n\nfrom importlib.metadata import version\n\nprint('test.py is running')\nprint('version is :')\nprint(version('rich'))\n\na=3+1\n\n\na\n\n```\n:::\n\n\n# add ruff as extension in positron\n\n![](images/my screenshots 1.png)\n\n# using ruff on .qmd file\n\nruff only work on .py file, So if want to use ruff to check .qmd file then it need to convert to .py first.\n\n## convert .qmd to .py\n\n::: {#74e682cd .cell filename='Terminal' execution_count=6}\n``` {.python .cell-code}\nquarto convert index.qmd    # ‚Üí index.ipynb\n```\n:::\n\n\n::: {#100c6d84 .cell filename='Terminal' execution_count=7}\n``` {.python .cell-code}\n!jupyter nbconvert --to python index.ipynb    # ‚Üí index.py\n```\n:::\n\n\n## check .py with ruff\n\n::: {#b2fad4a5 .cell filename='Terminal' execution_count=8}\n``` {.python .cell-code}\n!ruff check index.py\n```\n:::\n\n\n# reference:\n\nhttps://github.com/astral-sh/ruff\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}