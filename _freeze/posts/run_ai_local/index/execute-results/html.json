{
  "hash": "919b2cfe3e03727f71bf07e94af88b36",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Run AI model on local machine\"\n\nauthor: \"Tony D\"\ndate: \"2025-03-12\"\n\ncategories: \n  - AI\n  - R\n  - Python\nimage: \"images/images.png\"\n\nexecute:\n  warning: false\n  error: false\n  eval: false\n---\n\n\n\n\n# Set up Python:Using python 3.11 instead of 3.13\n::: {.cell}\n\n```{.r .cell-code}\nSys.setenv(RETICULATE_PYTHON = \"/Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11\")\nlibrary(reticulate)\nuse_python(\"/Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrepl_python()\n```\n:::\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom platform import python_version\nprint(python_version())\n```\n:::\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport sys\nimport platform\nprint(f\"Python Platform: {platform.platform()}\")\nprint()\nprint(f\"Python {sys.version}\")\n```\n:::\n\n# install all pacakge\n\n::: {.cell}\n\n```{.bash .cell-code}\npip3.11 install -U pip\npip3.11 install huggingface_hub\npip3.11 install sentencepiece\npip3.11 install transformers\npip3.11 install protobuf\npip3.11 install bitsandbytes \npip3.11 install accelerate\n\n```\n:::\n\n# install torch for Mac\n\n::: {.cell}\n\n```{.bash .cell-code}\npip3.11 install pytorch torchvision torchaudio -c pytorch-nightly\n```\n:::\n\n\n# install tensorflow for Mac\n\n::: {.cell}\n\n```{.bash .cell-code}\npip3.11 install tensorflow tensorflow-macos tensorflow-metal\n```\n:::\n\n# install jax-metal for Mac\n\n::: {.cell}\n\n```{.bash .cell-code}\npip3.11 install jax-metal ml_dtypes jax jaxlib\n```\n:::\n\n\n# Test Installs\n\n::: {.cell}\n\n```{.python .cell-code}\nimport torch, tensorflow as tf\n# Should be true\nprint(torch.backends.mps.is_available())\nprint(torch.backends.mps.is_built())\n\n# Should recognize 1 GPU\nprint(\"Num GPUs Available: \", len(tf.config.experimental.list_physical_devices('GPU')))\n```\n:::\n\n\n# start hugging face with python\n\n::: {.cell}\n\n```{.python .cell-code}\nimport os\nos.environ[\"PYTORCH_ENABLE_MPS_FALLBACK\"] = \"1\"\nos.environ[\"PYTORCH_MPS_HIGH_WATERMARK_RATIO\"] = \"0.0\"\nif \"GRADIO_SERVER_PORT\" not in os.environ:\n    os.environ[\"GRADIO_SERVER_PORT\"] = \"7865\"\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom huggingface_hub import hf_hub_download\n```\n:::\n\nset hugging face key\n\n::: {.cell}\n\n```{.python .cell-code}\nHUGGING_FACE_API_KEY = ''\n```\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nmodel_id = \"lmsys/fastchat-t5-3b-v1.0\"\nfilenames = [\n        \"pytorch_model.bin\", \"added_tokens.json\", \"config.json\", \"generation_config.json\", \n        \"special_tokens_map.json\", \"spiece.model\", \"tokenizer_config.json\"\n]\n```\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfor filename in filenames:\n        print(\"start download file:\"+filename)\n        downloaded_model_path = hf_hub_download(\n                    repo_id=model_id,\n                    filename=filename,\n                    token=HUGGING_FACE_API_KEY\n        )\n        \n        print(downloaded_model_path)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# offline\nHF_HUB_OFFLINE=1 \nfrom transformers import AutoTokenizer, AutoModelForCausalLM, pipeline, AutoModelForSeq2SeqLM\ntokenizer = AutoTokenizer.from_pretrained(model_id, legacy=False)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nmodel = AutoModelForSeq2SeqLM.from_pretrained(model_id,local_files_only=True)\n\n\n# using apple mps(GPU)\n# mps_device = \"mps\"\n#pipeline = pipeline(\"text2text-generation\", model=model, device = mps_device,tokenizer=tokenizer, max_length=100)\n\n\n# using apple CPU\npipeline = pipeline(\"text2text-generation\", model=model, device=-1, tokenizer=tokenizer, max_length=1000)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nanswer=pipeline(\"What are competitors to Apache Kafka?\")\nanswer\n```\n:::\n\n\n::: {.cell}\n\n```{.python .cell-code}\nanswer=pipeline(\"\"\"My name is Mark.\nI have brothers called David and John and my best friend is Michael.\nUsing only the context above. Do you know if I have a sister?    \n\"\"\")\nanswer\n```\n:::\n\n\n\n\n\n# Reference\n\nhttps://www.youtube.com/watch?v=Ay5K4tog5NQ\n\nhttps://huggingface.co/docs/transformers/main/en/installation\n\nhttps://medium.com/@faizififita1/huggingface-installation-on-apple-silicon-2022-m1-pro-max-ultra-m2-9c449b9b4c14\n\nhttps://www.youtube.com/watch?v=cGEIEnekmRM\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}