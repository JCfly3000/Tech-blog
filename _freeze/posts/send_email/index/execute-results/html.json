{
  "hash": "cf0c9b737ffd5013f7eefa4092e5f188",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"‰ΩøÁî®‰ª£Á†ÅÂèëÈÇÆ‰ª∂\"\nsubtitle: \"Using code to send email\"\nauthor: \"Tony D\"\ndate: \"2025-03-31\"\n\ncategories: \n  - Tool\n  - R\n  - Python\n\n  \nexecute:\n  warning: false\n  error: false\n  eval: false\n\nimage: 'images/is-more-than-password-recovery.webp'\n---\n\nA guide to sending emails programmatically using the `blastula` package in R, covering credential setup, email composition, and sending from Gmail and Outlook.\n\nThis document provides a comprehensive guide to sending emails programmatically using R and Python. For R, it focuses on the `blastula` package, covering the entire workflow from creating SMTP credentials for Gmail and Outlook to composing and sending emails. It also demonstrates how to render Quarto content directly into an email body. The Python section is a placeholder for future content.\n\nUsing R or Python to send email\n\n# Using R\n\nSend email with {blastula}.Also update in to [R handbook](https://jcfly3000.github.io/Into-R/Publish/4%20email/email.html)\n\n\n## load library \n::: {.cell}\n\n```{.r .cell-code}\nlibrary(blastula)\nlibrary(keyring)\n```\n:::\n\n## Step 1 create smtp credentials\n\n### gmail\n::: {.cell}\n\n```{.r .cell-code}\ncreate_smtp_creds_key(\n  id = \"gmail001_creds\",\n  provider = \"gmail\",\n  user = \"verykoala@gmail.com\",\n  overwrite = TRUE\n  )\n```\n:::\n\n### outlook\n::: {.cell}\n\n```{.r .cell-code}\n# create_smtp_creds_key(\n#   id = \"outlook001_creds\",\n#   provider = \"outlook\",\n#   user = \"jcpartner@outlook.com\",\n#   overwrite = TRUE\n#   )\n\ncreate_smtp_creds_file(file = \"ggnot_throwaway_creds\",\n                       user = \"jcpartner@outlook.com\",\n                       provider = \"outlook\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#delete_credential_key(\"gmail001_creds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nview_credential_keys()\n```\n:::\n\n## Step 2 email content\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(blastula)\nmsg=compose_email(\n  body = md(\n  \"Hi there üëã,\n  \n  This is an email to let you now thatrunning job **finished**.\n\n  Best,<br>\n  Tony\"\n  )\n)\n\nmsg\n```\n:::\n\n\n\n\n## Step 3 send email\n\n::: panel-tabset\n\n### send from gmail\n::: {.cell}\n\n```{.r .cell-code}\nmsg %>% \n  smtp_send(\n    from = 'verykoala@gmail.com',\n    to = \"jcflyingco@outlook.com\",\n    subject = \"Testing the email function\",\n    credentials = creds_key(id = \"gmail001_creds\")\n  )\n```\n:::\n\n\n### send from outlook\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Microsoft365R)\noutl <- get_personal_outlook()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# list the most recent emails in your Inbox\n#outl$list_emails()\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem <- outl$create_email(msg, subject=\"Hello\", to=\"jcflyingco@outlook.com\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nem$send()\n```\n:::\n\n:::\n\n## Step3 (option B) send email with quarto content\n\n\n\n\ncreate email Rmd file(.quarto_email.Rmd):\n\n----------------------------------\n\n::: {.cell filename='.quarto_email.Rmd'}\n\n```{.r .cell-code}\n---\ntitle: \"Quarto Email\"\noutput: blastula::blastula_email \n---\n\n\n\n# tesing\n\ntesting\n\n\n# Reference:\nhttps://www.youtube.com/watch?v=PihKq1GPlcc\n```\n:::\n\n----------------------------------\n\ncreate email \n\n::: {.cell}\n\n```{.r .cell-code}\nemail_obj=render_email('.quarto_email.Rmd')\n```\n:::\n\n\nView the email\n\n::: {.cell}\n\n```{.r .cell-code}\nemail_obj\n```\n:::\n\n\n\n::: panel-tabset\n\n\n\n### send from gmail\n\n::: {.cell}\n\n```{.r .cell-code}\nemail_obj%>% \n  smtp_send(\n    from = 'verykoala@gmail.com',\n    to = \"jcflyingco@outlook.com\",\n    subject = \"Testing the email function\",\n    credentials = creds_key(id = \"gmail001_creds\")\n  )\n```\n:::\n\n### send from outlook\n\n::: {.cell}\n\n```{.r .cell-code}\nem <- outl$create_email(email_obj, subject=\"Hello\", to=\"jcflyingco@outlook.com\")\nem$send()\n```\n:::\n\n:::\n\n\n\n\n# Using Python\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}