[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tech blog",
    "section": "",
    "text": "R code optimization with lintr and styler\n\n\n\nTool\n\nR\n\n\n\n\n\n\n\n\n\nMar 15, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nAI Code assistant\n\n\n\nTool\n\nR\n\nPython\n\n\n\n\n\n\n\n\n\nMar 15, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nPython code optimization with ruff\n\n\n\nTool\n\nPython\n\n\n\n\n\n\n\n\n\nMar 14, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nVersion control for Python with uv\n\n\n\nTool\n\nPython\n\n\n\n\n\n\n\n\n\nMar 14, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nR pacakge download and managment tool\n\n\n\nTool\n\nR\n\n\n\n\n\n\n\n\n\nMar 14, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nCPU and GPU\n\n\n\nTool\n\nR\n\nPython\n\n\n\n\n\n\n\n\n\nMar 12, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nClassification Metrics\n\n\n\nMachine learning\n\nR\n\nPython\n\n\n\n\n\n\n\n\n\nMar 12, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nWeb scraping in R with rvest\n\n\n\nTool\n\nWebscrap\n\nR\n\n\n\n\n\n\n\n\n\nMar 12, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nRun AI model on local machine\n\n\n\nAI\n\nR\n\nPython\n\n\n\n\n\n\n\n\n\nMar 12, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nSubscribe to a YouTube channel via email\n\n\n\nTool\n\n\n\n\n\n\n\n\n\nMar 11, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nVersion control with renv\n\n\n\nTool\n\nR\n\nPython\n\n\n\n\n\n\n\n\n\nMar 11, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nUseful resource\n\n\n\nnews\n\nresource\n\n\n\n\n\n\n\n\n\nMar 1, 2025\n\n\nTony D\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\nnews\n\ncode\n\nanalysis\n\n\n\n\n\n\n\n\n\nMar 11, 2000\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMar 8, 2000\n\n\nTony D\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/subscribeYouTubeviaemail/index.html",
    "href": "posts/subscribeYouTubeviaemail/index.html",
    "title": "Subscribe to a YouTube channel via email",
    "section": "",
    "text": "If you want to Subscribe to a YouTube channel but do not want to follow them.The trick is figuring out how to subscribe to a YouTube channel via email\n\nStep 1: open youtube page of the channel want to subscribe\nfor example:https://www.youtube.com/@thecoatlessprofessor7674/videos\n\n\nStep 2: view page source\n\n\n\nStep 3: find ‘videos.xml’ in page source\nfor example: https://www.youtube.com/feeds/videos.xml?channel_id=UColncDCZ8SmTAHYr92QFclQ\n\n\nStep 4: Use an RSS-to-Email Tool to Subscribe\nusing free RSS tool https://feedrabbit.com/ and enter your email address to subscribe. \n\n\nStep 5: open email and activate feedrabbit from a email from feedrabbit\nWhen there is a new video you will get a email.\nyou can also view all subscribe at https://feedrabbit.com/subscriptions\n\n\nReference\nhttps://greggblanchard.com/how-to-subscribe-to-a-youtube-channel-via-email/"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/versioncontrol/index.html",
    "href": "posts/versioncontrol/index.html",
    "title": "Version control with renv",
    "section": "",
    "text": "The renv package helps you create reproducible environments for your R projects\nIt section also update into R handbook\n# renv for R"
  },
  {
    "objectID": "posts/versioncontrol/index.html#inital-renv-and-create-renv.lock-with-current-loaded-pacakge",
    "href": "posts/versioncontrol/index.html#inital-renv-and-create-renv.lock-with-current-loaded-pacakge",
    "title": "Version control with renv",
    "section": "inital renv and create renv.lock with current loaded pacakge",
    "text": "inital renv and create renv.lock with current loaded pacakge\n\nrenv::init()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#show-all-installed-pacakge",
    "href": "posts/versioncontrol/index.html#show-all-installed-pacakge",
    "title": "Version control with renv",
    "section": "show all installed pacakge",
    "text": "show all installed pacakge\n\ninstalled_pacakge = as.data.frame(installed.packages()[,c(1,3:4)])\ninstalled_pacakge = installed_pacakge[is.na(installed_pacakge$Priority),1:2,drop=FALSE]\ninstalled_pacakge"
  },
  {
    "objectID": "posts/versioncontrol/index.html#show-all-installed-pacakge-and-uploaded-pacakge",
    "href": "posts/versioncontrol/index.html#show-all-installed-pacakge-and-uploaded-pacakge",
    "title": "Version control with renv",
    "section": "show all installed pacakge and uploaded pacakge",
    "text": "show all installed pacakge and uploaded pacakge\n\nlibrary(dplyr)\ninstalled_pacakge = as.data.frame(installed.packages()[,c(1,3:4)])\ninstalled_pacakge = installed_pacakge[is.na(installed_pacakge$Priority),1:2,drop=FALSE]\ninstalled_pacakge |&gt; filter(Package %in% (.packages()))"
  },
  {
    "objectID": "posts/versioncontrol/index.html#when-using-renv-and-install-new-pakcage",
    "href": "posts/versioncontrol/index.html#when-using-renv-and-install-new-pakcage",
    "title": "Version control with renv",
    "section": "when using renv and install new pakcage",
    "text": "when using renv and install new pakcage\n\n# it will not work\n# library(lubridate)"
  },
  {
    "objectID": "posts/versioncontrol/index.html#install-new-package-with-renvinstall",
    "href": "posts/versioncontrol/index.html#install-new-package-with-renvinstall",
    "title": "Version control with renv",
    "section": "install new package with renv::install",
    "text": "install new package with renv::install\n\nrenv::install('lubridate')\n\n\nlibrary(lubridate)"
  },
  {
    "objectID": "posts/versioncontrol/index.html#check-current-package-and-renv-package",
    "href": "posts/versioncontrol/index.html#check-current-package-and-renv-package",
    "title": "Version control with renv",
    "section": "check current package and renv package",
    "text": "check current package and renv package\n\nrenv::status()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#update-lock-file",
    "href": "posts/versioncontrol/index.html#update-lock-file",
    "title": "Version control with renv",
    "section": "update lock file",
    "text": "update lock file\n\nrenv::snapshot()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#check-status-again",
    "href": "posts/versioncontrol/index.html#check-status-again",
    "title": "Version control with renv",
    "section": "check status again",
    "text": "check status again\n\nrenv::status()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#make-all-current-pakcage-version-back-to-renv-list",
    "href": "posts/versioncontrol/index.html#make-all-current-pakcage-version-back-to-renv-list",
    "title": "Version control with renv",
    "section": "make all current pakcage version back to renv list",
    "text": "make all current pakcage version back to renv list\n\nrenv::restore()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#update-all-pakcage-in-renv.-recommand-do-it-once-a-year-to-keep-package-updated.",
    "href": "posts/versioncontrol/index.html#update-all-pakcage-in-renv.-recommand-do-it-once-a-year-to-keep-package-updated.",
    "title": "Version control with renv",
    "section": "update all pakcage in renv. recommand do it once a year to keep package updated.",
    "text": "update all pakcage in renv. recommand do it once a year to keep package updated.\n\nrenv::update()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#update-renv-itself-only",
    "href": "posts/versioncontrol/index.html#update-renv-itself-only",
    "title": "Version control with renv",
    "section": "update renv itself only",
    "text": "update renv itself only\n\nrenv::upgrade()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#close-renv-in-a-project",
    "href": "posts/versioncontrol/index.html#close-renv-in-a-project",
    "title": "Version control with renv",
    "section": "close renv in a project",
    "text": "close renv in a project\n\nrenv::deactivate()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#re-enable-renv-in-a-project",
    "href": "posts/versioncontrol/index.html#re-enable-renv-in-a-project",
    "title": "Version control with renv",
    "section": "re enable renv in a project",
    "text": "re enable renv in a project\n\nrenv::activate()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#set-python-version",
    "href": "posts/versioncontrol/index.html#set-python-version",
    "title": "Version control with renv",
    "section": "set python version",
    "text": "set python version\n\nrenv::use_python()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#check-python-version-in-renv",
    "href": "posts/versioncontrol/index.html#check-python-version-in-renv",
    "title": "Version control with renv",
    "section": "check python version in renv",
    "text": "check python version in renv\n\nfrom sys import version as python_formatted_version\nprint(python_formatted_version)"
  },
  {
    "objectID": "posts/versioncontrol/index.html#list-all-installed-pacakge-in-python",
    "href": "posts/versioncontrol/index.html#list-all-installed-pacakge-in-python",
    "title": "Version control with renv",
    "section": "list all installed pacakge in python",
    "text": "list all installed pacakge in python\n\nimport os\nprint(os.system('pip freeze'))"
  },
  {
    "objectID": "posts/versioncontrol/index.html#install-package",
    "href": "posts/versioncontrol/index.html#install-package",
    "title": "Version control with renv",
    "section": "install package",
    "text": "install package\n\nimport os\nos.system('python3.10 -m pip install siuba')"
  },
  {
    "objectID": "posts/versioncontrol/index.html#update-lock-file-1",
    "href": "posts/versioncontrol/index.html#update-lock-file-1",
    "title": "Version control with renv",
    "section": "update lock file",
    "text": "update lock file\n\nrenv::snapshot()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#uninstall-package",
    "href": "posts/versioncontrol/index.html#uninstall-package",
    "title": "Version control with renv",
    "section": "uninstall package",
    "text": "uninstall package\n\nimport os\nos.system('yes | python3.10 -m pip uninstall siuba')"
  },
  {
    "objectID": "posts/versioncontrol/index.html#make-all-current-pakcage-version-back-to-renv-list-1",
    "href": "posts/versioncontrol/index.html#make-all-current-pakcage-version-back-to-renv-list-1",
    "title": "Version control with renv",
    "section": "make all current pakcage version back to renv list",
    "text": "make all current pakcage version back to renv list\n\nrenv::restore()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#install-package-1",
    "href": "posts/versioncontrol/index.html#install-package-1",
    "title": "Version control with renv",
    "section": "install package",
    "text": "install package\n\nimport os\nos.system('python3.10 -m pip install requests')"
  },
  {
    "objectID": "posts/versioncontrol/index.html#update-lock-file-2",
    "href": "posts/versioncontrol/index.html#update-lock-file-2",
    "title": "Version control with renv",
    "section": "update lock file",
    "text": "update lock file\n\nrenv::snapshot()"
  },
  {
    "objectID": "posts/versioncontrol/index.html#need-to-install-new-package-with-renvinstall",
    "href": "posts/versioncontrol/index.html#need-to-install-new-package-with-renvinstall",
    "title": "Version control with renv",
    "section": "need to install new package with renv::install",
    "text": "need to install new package with renv::install\n\nrenv::install('lubridate')\n\n\nlibrary(lubridate)"
  },
  {
    "objectID": "posts/web_scraping_in_R_with_rvest/index.html",
    "href": "posts/web_scraping_in_R_with_rvest/index.html",
    "title": "Web scraping in R with rvest",
    "section": "",
    "text": "Basic Web scraping in R with rvest.\nAlso update to R handbook"
  },
  {
    "objectID": "posts/web_scraping_in_R_with_rvest/index.html#get-3rd-table",
    "href": "posts/web_scraping_in_R_with_rvest/index.html#get-3rd-table",
    "title": "Web scraping in R with rvest",
    "section": "get 3rd table",
    "text": "get 3rd table\nfind table xpath\n\n\nCode\ntable=page %&gt;%html_element(xpath = '//*[@id=\"mw-content-text\"]/div[1]/table[3]') |&gt; html_table()\ntable |&gt; head()\n\n\n# A tibble: 6 × 11\n  `Driver name`     Nationality    `Seasons competed` `Drivers' Championships`\n  &lt;chr&gt;             &lt;chr&gt;          &lt;chr&gt;              &lt;chr&gt;                   \n1 Carlo Abate       Italy          1962–1963          0                       \n2 George Abecassis  United Kingdom 1951–1952          0                       \n3 Kenny Acheson     United Kingdom 1983, 1985         0                       \n4 Andrea de Adamich Italy          1968, 1970–1973    0                       \n5 Philippe Adams    Belgium        1994               0                       \n6 Walt Ader         United States  1950               0                       \n# ℹ 7 more variables: `Race entries` &lt;chr&gt;, `Race starts` &lt;chr&gt;,\n#   `Pole positions` &lt;chr&gt;, `Race wins` &lt;chr&gt;, Podiums &lt;chr&gt;,\n#   `Fastest laps` &lt;chr&gt;, `Points[a]` &lt;chr&gt;"
  },
  {
    "objectID": "posts/web_scraping_in_R_with_rvest/index.html#get-4th-table",
    "href": "posts/web_scraping_in_R_with_rvest/index.html#get-4th-table",
    "title": "Web scraping in R with rvest",
    "section": "get 4th table",
    "text": "get 4th table\nfind table xpath\n\n\nCode\ntable=page %&gt;%html_element(xpath = '//*[@id=\"mw-content-text\"]/div[1]/table[4]') |&gt; html_table()\ntable |&gt; head()\n\n\n# A tibble: 6 × 7\n  Country     Totaldrivers Champions Championships `Race wins` `First driver(s)`\n  &lt;chr&gt;       &lt;chr&gt;        &lt;chr&gt;     &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;            \n1 Argentinad… 26           1(Fangio… 5(1951, 1954… \"38\\n(Fang… Juan Manuel Fang…\n2 Australiad… 18           2(Brabha… 4(1959, 1960… \"45\\n(Brab… Tony Gaze(1952 B…\n3 Austriadet… 16           2(Rindt,… 4(1970, 1975… \"41\\n(Rind… Jochen Rindt(196…\n4 Belgiumdet… 24           0         0             \"11\\n(Ickx… Johnny Claes(195…\n5 Brazildeta… 33           3(Fittip… 8(1972, 1974… \"101\\n(Fit… Chico Landi(1951…\n6 Canadadeta… 15           1(J. Vil… 1(1997)       \"17\\n(G. V… Peter Ryan(1961 …\n# ℹ 1 more variable: `Most recent driver(s)/Current driver(s)` &lt;chr&gt;"
  },
  {
    "objectID": "posts/Classification Metrics/index.html",
    "href": "posts/Classification Metrics/index.html",
    "title": "Classification Metrics",
    "section": "",
    "text": "Classification Metrics Explained | Sensitivity, Precision, AUROC, & More\n\ninstall pacakge\n\npip install -U scikit-learn\npip install -U kaggle\npip install -U kagglehub\n\n\n\nload pacakge\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nimport pandas as pd\nimport seaborn as sns\n\n#from kaggle.api.kaggle_api_extended import KaggleApi\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import (\n    precision_score, recall_score, roc_curve,\n    accuracy_score, f1_score, roc_auc_score,\n    average_precision_score, confusion_matrix,\n    precision_recall_curve\n)\n\n\n\ndownload data from kaggle\n\nimport kagglehub\n# Download latest version\nkagglehub.dataset_download(\"uciml/pima-indians-diabetes-database\")\npath = kagglehub.dataset_download(\"uciml/pima-indians-diabetes-database\")\nprint(\"Path to dataset files:\", path)\n\nPath to dataset files: /Users/jinchaoduan/.cache/kagglehub/datasets/uciml/pima-indians-diabetes-database/versions/1\n\n\nshow data file under download folder\n\nimport os\nos.listdir(path)\n\n['diabetes.csv']\n\n\n\n\nread data\n\ndf = pd.read_csv(path+'/'+os.listdir(path)[0])\ndf.head()\n\n\n\n\n\n\n\n\nPregnancies\nGlucose\nBloodPressure\nSkinThickness\nInsulin\nBMI\nDiabetesPedigreeFunction\nAge\nOutcome\n\n\n\n\n0\n6\n148\n72\n35\n0\n33.6\n0.627\n50\n1\n\n\n1\n1\n85\n66\n29\n0\n26.6\n0.351\n31\n0\n\n\n2\n8\n183\n64\n0\n0\n23.3\n0.672\n32\n1\n\n\n3\n1\n89\n66\n23\n94\n28.1\n0.167\n21\n0\n\n\n4\n0\n137\n40\n35\n168\n43.1\n2.288\n33\n1\n\n\n\n\n\n\n\n\ndf.Outcome.value_counts()\n\nOutcome\n0    500\n1    268\nName: count, dtype: int64\n\n\n\n# separate features from response\nX = df.drop('Outcome', axis=1)\ny = df['Outcome']\n\n\n# split data into test and training sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n\n# initialize and train logistic regression model\nmodel = LogisticRegression(max_iter=1000)\nmodel.fit(X_train, y_train)\n\nLogisticRegression(max_iter=1000)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.LogisticRegression?Documentation for LogisticRegressioniFittedLogisticRegression(max_iter=1000) \n\n\n\n# predict on the test set and get the probas\ny_pred = model.predict(X_test)\ny_pred_proba = model.predict_proba(X_test)[:, 1] \n\n\n# quickly look at the distribution of the probas\npercentiles = np.percentile(y_pred_proba, [5, 25, 50, 75, 95])\npercentiles\n\narray([0.03455652, 0.11989883, 0.29954411, 0.64776581, 0.87083353])\n\n\n\n\nconfusion matrix\n\n# generate confusion matrix\ncm = confusion_matrix(y_test, y_pred)\n\nplt.figure(figsize=(8, 6))\nsns.heatmap(cm, annot=True, fmt='d', cmap='Blues', cbar=False)\nplt.title('Confusion Matrix')\nplt.xlabel('Predicted Labels')\nplt.ylabel('True Labels')\nplt.xticks([0.5, 1.5], ['No Diabetes', 'Diabetes'])\nplt.yticks([0.5, 1.5], ['No Diabetes', 'Diabetes'], va='center')\nplt.show()\n\n\n\n\n\n\n\n\n\n# recall / sensitivity\nrecall = recall_score(y_test, y_pred)\nrecall\n\n0.6727272727272727\n\n\n\n# precision / positive predictive value\nprecision = precision_score(y_test, y_pred)\nprecision\n\n0.6379310344827587\n\n\n\n# specificity\ntn, fp, fn, tp = confusion_matrix(y_test, y_pred).ravel()\nspecificity = tn / (tn + fp)\nspecificity\n\nnp.float64(0.7878787878787878)\n\n\n\n# accuracy\naccuracy = accuracy_score(y_test, y_pred)\naccuracy\n\n0.7467532467532467\n\n\n\n# f1\nf1 = f1_score(y_test, y_pred)\nf1\n\n0.6548672566371682\n\n\n\n# get ROC curve values\nfpr, tpr, thresholds_roc = roc_curve(y_test, y_pred_proba)\n\n# get PR curve values\nprecision, recall, thresholds_pr = precision_recall_curve(y_test, y_pred_proba)\n\n# get areas under the curves\nauroc = roc_auc_score(y_test, y_pred_proba)\npr_auc = average_precision_score(y_test, y_pred_proba)\n\n\n# plot both curves\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(16, 6))\nax1.plot(fpr, tpr, color='darkorange', lw=2, label=f'AUC = {auroc:.2f}')\nax1.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\nax1.set_xlabel('False Positive Rate')\nax1.set_ylabel('True Positive Rate')\nax1.set_title('Receiver Operating Characteristic (ROC) Curve')\nax1.legend(loc=\"lower right\")\n\n# Plot Precision-Recall Curve\nax2.plot(recall, precision, color='purple', lw=2, label=f'PR-AUC = {pr_auc:.2f}')\nax2.set_xlabel('Recall')\nax2.set_ylabel('Precision')\nax2.set_title('Precision-Recall Curve')\nax2.legend(loc=\"lower left\")\n\nplt.show()\n\n\n\n\n\n\n\n\n\ny_test.value_counts()\n\nOutcome\n0    99\n1    55\nName: count, dtype: int64\n\n\n\n\nReference\nhttps://www.youtube.com/watch?v=KdUrfY1yM0w\nhttps://github.com/RichardOnData/YouTube/blob/main/Python%20Notebooks/classification_metrics.ipynb"
  },
  {
    "objectID": "posts/usefullresource/index.html",
    "href": "posts/usefullresource/index.html",
    "title": "Useful resource",
    "section": "",
    "text": "Some useful resource\n\nYoutube\n\nRProgramming101\n\nPositPBC\n\nJuliaSilge\n\n\n\nthecoatlessprofessor\n\n\n\nEquitableEquations"
  },
  {
    "objectID": "posts/CPUGPU/index.html",
    "href": "posts/CPUGPU/index.html",
    "title": "CPU and GPU",
    "section": "",
    "text": "CPU & GPU Performance\n\nlocal computer CPU and GPU info\n\nCPUGPU OpenCL PerformanceGPU Metal Performance\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWorld computer CPU and GPU info\n\nCPUGPU OpenCL Performance!GPU Metal Performance\n\n\nhttps://browser.geekbench.com/v6/cpu/multicore\n\n\n\nhttps://browser.geekbench.com/opencl-benchmarks\n\n\n\nhttps://browser.geekbench.com/metal-benchmarks\n\n\n\n\n\n\nReference\nhttps://www.geekbench.com/\nhttps://github.com/ProjectPhysX/OpenCL-Benchmark"
  },
  {
    "objectID": "posts/run_ai_local/index.html",
    "href": "posts/run_ai_local/index.html",
    "title": "Run AI model on local machine",
    "section": "",
    "text": "Set up Python:Using python 3.11 instead of 3.13\n\n\nCode\nSys.setenv(RETICULATE_PYTHON = \"/Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11\")\nlibrary(reticulate)\nuse_python(\"/Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11\")\n\n\n\n\nCode\nrepl_python()\n\n\n\n\nCode\nfrom platform import python_version\nprint(python_version())\n\n\n\n\nCode\nimport sys\nimport platform\nprint(f\"Python Platform: {platform.platform()}\")\nprint()\nprint(f\"Python {sys.version}\")\n\n\n\n\ninstall all pacakge\n\n\nCode\npip3.11 install -U pip\npip3.11 install huggingface_hub\npip3.11 install sentencepiece\npip3.11 install transformers\npip3.11 install protobuf\npip3.11 install bitsandbytes \npip3.11 install accelerate\n\n\n\n\ninstall torch for Mac\n\n\nCode\npip3.11 install pytorch torchvision torchaudio -c pytorch-nightly\n\n\n\n\ninstall tensorflow for Mac\n\n\nCode\npip3.11 install tensorflow tensorflow-macos tensorflow-metal\n\n\n\n\ninstall jax-metal for Mac\n\n\nCode\npip3.11 install jax-metal ml_dtypes jax jaxlib\n\n\n\n\nTest Installs\n\n\nCode\nimport torch, tensorflow as tf\n# Should be true\nprint(torch.backends.mps.is_available())\nprint(torch.backends.mps.is_built())\nprint(tf.config.list_physical_devices('GPU'))\n# Should recognize 1 GPU\nprint(\"Num GPUs Available: \", len(tf.config.experimental.list_physical_devices('GPU')))\n\n\n\n\nstart hugging face with python\n\n\nCode\nimport os\nos.environ[\"PYTORCH_ENABLE_MPS_FALLBACK\"] = \"1\"\nos.environ[\"PYTORCH_MPS_HIGH_WATERMARK_RATIO\"] = \"0.0\"\nif \"GRADIO_SERVER_PORT\" not in os.environ:\n    os.environ[\"GRADIO_SERVER_PORT\"] = \"7865\"\n\n\n\n\nCode\nfrom huggingface_hub import hf_hub_download\n\n\nset hugging face key\n\n\nCode\nHUGGING_FACE_API_KEY = ''\n\n\n\n\nCode\nmodel_id = \"lmsys/fastchat-t5-3b-v1.0\"\nfilenames = [\n        \"pytorch_model.bin\", \"added_tokens.json\", \"config.json\", \"generation_config.json\", \n        \"special_tokens_map.json\", \"spiece.model\", \"tokenizer_config.json\"\n]\n\n\n\n\nCode\nfor filename in filenames:\n        print(\"start download file:\"+filename)\n        downloaded_model_path = hf_hub_download(\n                    repo_id=model_id,\n                    filename=filename,\n                    token=HUGGING_FACE_API_KEY\n        )\n        \n        print(downloaded_model_path)\n\n\n\n\nCode\n# offline\nHF_HUB_OFFLINE=1 \nfrom transformers import AutoTokenizer, AutoModelForCausalLM, pipeline, AutoModelForSeq2SeqLM\ntokenizer = AutoTokenizer.from_pretrained(model_id, legacy=False)\n\n\n\n\nCode\nmodel = AutoModelForSeq2SeqLM.from_pretrained(model_id,local_files_only=True)\n\n\n# using apple mps(GPU)\n# mps_device = \"mps\"\n#pipeline = pipeline(\"text2text-generation\", model=model, device = mps_device,tokenizer=tokenizer, max_length=100)\n\n\n# using apple CPU\npipeline = pipeline(\"text2text-generation\", model=model, device=-1, tokenizer=tokenizer, max_length=1000)\n\n\n\n\nCode\nanswer=pipeline(\"What are competitors to Apache Kafka?\")\nanswer\n\n\n\n\nCode\nanswer=pipeline(\"\"\"My name is Mark.\nI have brothers called David and John and my best friend is Michael.\nUsing only the context above. Do you know if I have a sister?    \n\"\"\")\nanswer\n\n\n\n\nReference\nhttps://www.youtube.com/watch?v=Ay5K4tog5NQ\nhttps://huggingface.co/docs/transformers/main/en/installation\nhttps://medium.com/@faizififita1/huggingface-installation-on-apple-silicon-2022-m1-pro-max-ultra-m2-9c449b9b4c14\nhttps://www.youtube.com/watch?v=cGEIEnekmRM"
  },
  {
    "objectID": "posts/versioncontrolpython/index.html",
    "href": "posts/versioncontrolpython/index.html",
    "title": "Version control for Python with uv",
    "section": "",
    "text": "🚀 A single tool to replace pip, pip-tools, pipx, poetry, pyenv, twine, virtualenv, and more.\n⚡️ 10-100x faster than pip.\n🗂️ Provides comprehensive project management, with a universal lockfile."
  },
  {
    "objectID": "posts/versioncontrolpython/index.html#there-is-no-rich-package-in-python",
    "href": "posts/versioncontrolpython/index.html#there-is-no-rich-package-in-python",
    "title": "Version control for Python with uv",
    "section": "there is no rich package in python",
    "text": "there is no rich package in python\n\n\nCode\ntry:\n    import rich\n    print('pacakge installed')\nexcept ImportError as e:\n    print('pacakge not installed')\n    pass  # module doesn't exist, deal with it."
  },
  {
    "objectID": "posts/versioncontrolpython/index.html#but-can-add-rich-in-script",
    "href": "posts/versioncontrolpython/index.html#but-can-add-rich-in-script",
    "title": "Version control for Python",
    "section": "but can add rich in script",
    "text": "but can add rich in script\n\n# /// script\n# requires-python = \"&gt;=3.12\"\n# dependencies = [\n#   \"requests&lt;3\",\n#   \"rich\",\n# ]\n# ///\n\nimport requests\nfrom rich.pretty import pprint\n\nresp = requests.get(\"https://peps.python.org/api/peps.json\")\ndata = resp.json()\npprint([(k, v[\"title\"]) for k, v in data.items()][:10])\n\nimport rich\nfrom importlib.metadata import version\nversion('rich')"
  },
  {
    "objectID": "posts/versioncontrolpython/index.html#run-.py-with-uv",
    "href": "posts/versioncontrolpython/index.html#run-.py-with-uv",
    "title": "Version control for Python with uv",
    "section": "run .py with uv",
    "text": "run .py with uv\n\n\nCode\n!uv run test.py\n\n\ntest.py is running\nversion is :\n13.9.4"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Posts",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nAuthor\n\n\n\n\n\n\n\n\nMar 15, 2025\n\n\nR code optimization with lintr and styler\n\n\nTony D\n\n\n\n\n\n\nMar 15, 2025\n\n\nAI Code assistant\n\n\nTony D\n\n\n\n\n\n\nMar 14, 2025\n\n\nPython code optimization with ruff\n\n\nTony D\n\n\n\n\n\n\nMar 14, 2025\n\n\nVersion control for Python with uv\n\n\nTony D\n\n\n\n\n\n\nMar 14, 2025\n\n\nR pacakge download and managment tool\n\n\nTony D\n\n\n\n\n\n\nMar 12, 2025\n\n\nCPU and GPU\n\n\nTony D\n\n\n\n\n\n\nMar 12, 2025\n\n\nClassification Metrics\n\n\nTony D\n\n\n\n\n\n\nMar 12, 2025\n\n\nWeb scraping in R with rvest\n\n\nTony D\n\n\n\n\n\n\nMar 12, 2025\n\n\nRun AI model on local machine\n\n\nTony D\n\n\n\n\n\n\nMar 11, 2025\n\n\nSubscribe to a YouTube channel via email\n\n\nTony D\n\n\n\n\n\n\nMar 11, 2025\n\n\nVersion control with renv\n\n\nTony D\n\n\n\n\n\n\nMar 1, 2025\n\n\nUseful resource\n\n\nTony D\n\n\n\n\n\n\nMar 11, 2000\n\n\nPost With Code\n\n\nHarlow Malloc\n\n\n\n\n\n\nMar 8, 2000\n\n\nWelcome To My Blog\n\n\nTony D\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/versioncontrolpython/index.html#but-can-add-rich-package-in-script",
    "href": "posts/versioncontrolpython/index.html#but-can-add-rich-package-in-script",
    "title": "Version control for Python with uv",
    "section": "but can add rich package in script",
    "text": "but can add rich package in script\n#| eval: false\n\n# /// script\n# requires-python = \"&gt;=3.12\"\n# dependencies = [\n#   \"requests&lt;3\",\n#   \"rich\",\n# ]\n# ///\n\nimport requests\nimport rich\nfrom rich.pretty import pprint\n\n\nimport rich\nfrom importlib.metadata import version\n\nprint('test.py is running')\nprint('version is :')\nprint(version('rich'))"
  },
  {
    "objectID": "posts/python_code_optimization/index.html",
    "href": "posts/python_code_optimization/index.html",
    "title": "Python code optimization with ruff",
    "section": "",
    "text": "⚡️ 10-100x faster than existing linters (like Flake8) and formatters (like Black)\n🐍 Installable via pip\n🛠️ pyproject.toml support"
  },
  {
    "objectID": "posts/python_code_optimization/index.html#convert-.qmd-to-.py",
    "href": "posts/python_code_optimization/index.html#convert-.qmd-to-.py",
    "title": "Python code optimization with ruff",
    "section": "convert .qmd to .py",
    "text": "convert .qmd to .py\n\n\n\nCode\n\nTerminal\n\nquarto convert index.qmd    # → index.ipynb\n\n\n\n\n\n\nCode\n\nTerminal\n\n!jupyter nbconvert --to python index.ipynb    # → index.py"
  },
  {
    "objectID": "posts/python_code_optimization/index.html#check-.py-with-ruff",
    "href": "posts/python_code_optimization/index.html#check-.py-with-ruff",
    "title": "Python code optimization with ruff",
    "section": "check .py with ruff",
    "text": "check .py with ruff\n\n\n\nCode\n\nTerminal\n\n!ruff check index.py"
  },
  {
    "objectID": "posts/copilot/index.html",
    "href": "posts/copilot/index.html",
    "title": "AI Code assistant",
    "section": "",
    "text": "AI tool for writing code"
  },
  {
    "objectID": "posts/copilot/index.html#configure-on-github",
    "href": "posts/copilot/index.html#configure-on-github",
    "title": "AI Code assistant",
    "section": "",
    "text": "free account is limit per month"
  },
  {
    "objectID": "posts/copilot/index.html#step-2-configure-on-github",
    "href": "posts/copilot/index.html#step-2-configure-on-github",
    "title": "AI Code assistant",
    "section": "Step 2 configure on github",
    "text": "Step 2 configure on github\nfree account is limit per month"
  },
  {
    "objectID": "posts/copilot/index.html#install-package",
    "href": "posts/copilot/index.html#install-package",
    "title": "AI Code assistant",
    "section": "Install package",
    "text": "Install package\n\nremotes::install_github(\"mlverse/chattr\")\n\n\nlibrary(chattr)"
  },
  {
    "objectID": "posts/copilot/index.html#run-chatgpt",
    "href": "posts/copilot/index.html#run-chatgpt",
    "title": "AI Code assistant",
    "section": "run ChatGPT",
    "text": "run ChatGPT\n\n# run \nchattr::chattr_app(as_job = TRUE)"
  },
  {
    "objectID": "posts/copilot/index.html#step-1-enble-on-rstudio",
    "href": "posts/copilot/index.html#step-1-enble-on-rstudio",
    "title": "AI Code assistant",
    "section": "Step 1 enble on Rstudio",
    "text": "Step 1 enble on Rstudio"
  },
  {
    "objectID": "posts/copilot/index.html#step-1-install-package",
    "href": "posts/copilot/index.html#step-1-install-package",
    "title": "AI Code assistant",
    "section": "Step 1 Install package",
    "text": "Step 1 Install package\n\n\nCode\n#remotes::install_github(\"mlverse/chattr\")\n\n\n\n\nCode\nlibrary(chattr)"
  },
  {
    "objectID": "posts/copilot/index.html#step-4-run-chatgpt-as-background-job",
    "href": "posts/copilot/index.html#step-4-run-chatgpt-as-background-job",
    "title": "AI Code assistant",
    "section": "Step 4 run ChatGPT as background job",
    "text": "Step 4 run ChatGPT as background job\n\n\nCode\n# run \nchattr::chattr_app(as_job = TRUE)"
  },
  {
    "objectID": "posts/copilot/index.html#step-3-run-chatgpt-as-background-job",
    "href": "posts/copilot/index.html#step-3-run-chatgpt-as-background-job",
    "title": "AI Code assistant",
    "section": "Step 3 run ChatGPT as background job",
    "text": "Step 3 run ChatGPT as background job\n\nselect model\n\n\nCode\n#copilot do not need OpenAI_API_KEY\nchattr_use(\"copilot\")\n\n\n\n\nadd prompt\n\n\nCode\nchattr_defaults(prompt = \"{readLines(system.file('prompt/base.txt', package = 'chattr'))}\")\n\n\n\n\nrun ChatGPT\n\n\nCode\n# run \nchattr_app(as_job = TRUE)\n\n\n\nDone!"
  },
  {
    "objectID": "posts/copilot/index.html#or-setup-auto-open-chat-gpt",
    "href": "posts/copilot/index.html#or-setup-auto-open-chat-gpt",
    "title": "AI Code assistant",
    "section": "Or setup auto open Chat GPT",
    "text": "Or setup auto open Chat GPT\n\nStep 1 find Rprofile file\n\n\nCode\ninstall.packages(\"usethis\")  # Install if not already installed\nusethis::edit_r_profile()\n\n\n\n\nStep 2 edit Rprofile file as below\n\n\n\nCode\n\n.RProfile\n\n#|eval: false\n# Load chattr app after RStudio is fully loaded\nsetHook(\"rstudio.sessionInit\", function(newSession) {\n  if (newSession) {\n    Sys.sleep(2)  # Wait 2 seconds before starting chattr to ensure RStudio is ready\n    tryCatch({\n      library(chattr)\n      chattr_use(\"gpt-4\")\n      Sys.setenv(\"OPENAI_API_KEY\" = \"your-api-key-here\")\n      chattr_app(as_job = TRUE)\n    }, error = function(e)\n      message(\"Error starting chattr: \", e$message))\n  }\n}, action = \"append\")"
  },
  {
    "objectID": "posts/copilot/index.html#or-setup-auto-open-chat-gpt-when-rstudio-start",
    "href": "posts/copilot/index.html#or-setup-auto-open-chat-gpt-when-rstudio-start",
    "title": "AI Code assistant",
    "section": "Or setup auto open Chat GPT when Rstudio start",
    "text": "Or setup auto open Chat GPT when Rstudio start\n\nStep 1 find Rprofile file\n\n\nCode\n#install.packages(\"usethis\")  # Install if not already installed\nusethis::edit_r_profile()\n\n\n\n\nStep 2 edit Rprofile file as below\n\n\n\nCode\n\n.RProfile\n\n#|eval: false\n# Load chattr app after RStudio is fully loaded\nsetHook(\"rstudio.sessionInit\", function(newSession) {\n  if (newSession) {\n    Sys.sleep(2)  # Wait 2 seconds before starting chattr to ensure RStudio is ready\n    tryCatch({\n      library(chattr)\n      chattr_use(\"copilot\")\n      #Sys.setenv(\"OPENAI_API_KEY\" = \"your-api-key-here\")\n      chattr_defaults(prompt = \"{readLines(system.file('prompt/base.txt', package = 'chattr'))}\")\n\n      chattr_app(as_job = TRUE)\n    }, error = function(e)\n      message(\"Error starting chattr: \", e$message))\n  }\n}, action = \"append\")"
  },
  {
    "objectID": "posts/Rpackage/index.html",
    "href": "posts/Rpackage/index.html",
    "title": "R pacakge download and managment tool",
    "section": "",
    "text": "pak installs R packages from CRAN, Bioconductor, GitHub, URLs, git repositories, local files and directories. It is an alternative to install.packages() and devtools::install_github(). pak is fast, safe and convenient."
  },
  {
    "objectID": "posts/Rpackage/index.html#install-pak",
    "href": "posts/Rpackage/index.html#install-pak",
    "title": "R pacakge download and managment tool",
    "section": "install pak",
    "text": "install pak\n\n\nCode\ninstall.packages(\"pak\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#load-pak",
    "href": "posts/Rpackage/index.html#load-pak",
    "title": "R pacakge download and managment tool",
    "section": "load pak",
    "text": "load pak\n\n\nCode\nlibrary(pak)"
  },
  {
    "objectID": "posts/Rpackage/index.html#check-pak-version",
    "href": "posts/Rpackage/index.html#check-pak-version",
    "title": "R pacakge download and managment tool",
    "section": "check pak version",
    "text": "check pak version\n\n\nCode\npak_sitrep()"
  },
  {
    "objectID": "posts/Rpackage/index.html#install-pacakge-from-cran",
    "href": "posts/Rpackage/index.html#install-pacakge-from-cran",
    "title": "R pacakge download and managment tool",
    "section": "install pacakge from cran",
    "text": "install pacakge from cran\n\n\nCode\npkg_install(\"tibble\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#install-pacakge-file-tar.gz-from-website",
    "href": "posts/Rpackage/index.html#install-pacakge-file-tar.gz-from-website",
    "title": "R pacakge download and managment tool",
    "section": "install pacakge file tar.gz from website",
    "text": "install pacakge file tar.gz from website\n\n\nCode\npkg_install(\n  \"url::https://cran.r-project.org/src/contrib/Archive/tibble/tibble_3.1.7.tar.gz\"\n)"
  },
  {
    "objectID": "posts/Rpackage/index.html#uninstall-package",
    "href": "posts/Rpackage/index.html#uninstall-package",
    "title": "R pacakge download and managment tool",
    "section": "uninstall package",
    "text": "uninstall package\n\n\nCode\npkg_remove(\"tibble\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#check-package",
    "href": "posts/Rpackage/index.html#check-package",
    "title": "R pacakge download and managment tool",
    "section": "check package",
    "text": "check package\n\n\nCode\npkg_deps_tree(\"tibble\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#show-all-dependencies",
    "href": "posts/Rpackage/index.html#show-all-dependencies",
    "title": "R pacakge download and managment tool",
    "section": "show all Dependencies",
    "text": "show all Dependencies\n\n\nCode\npkg_deps(\"tibble\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#explain-dependencies",
    "href": "posts/Rpackage/index.html#explain-dependencies",
    "title": "R pacakge download and managment tool",
    "section": "Explain dependencies",
    "text": "Explain dependencies\n\n\nCode\npkg_deps_explain(\"tibble\", \"rlang\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#update-package",
    "href": "posts/Rpackage/index.html#update-package",
    "title": "R pacakge download and managment tool",
    "section": "update package",
    "text": "update package\n\n\nCode\npkg_install(\"tibble\")\n\n\nUpdate all dependencies of a package\n\n\nCode\npkg_install(\"tibble\", upgrade = TRUE)"
  },
  {
    "objectID": "posts/r_code_optimization/index.html",
    "href": "posts/r_code_optimization/index.html",
    "title": "R code optimization with lintr and styler",
    "section": "",
    "text": "pacakge for R code optimization"
  },
  {
    "objectID": "posts/r_code_optimization/index.html#before",
    "href": "posts/r_code_optimization/index.html#before",
    "title": "R code optimization with lintr and styler",
    "section": "Before",
    "text": "Before\n\n\nCode\nlibrary(\"dplyr\")\n\n   Good &lt;- 1\napplePie &lt;- Good + 1\n    Peter &lt;- d + 1"
  },
  {
    "objectID": "posts/r_code_optimization/index.html#auto-formating",
    "href": "posts/r_code_optimization/index.html#auto-formating",
    "title": "R code optimization with lintr and styler",
    "section": "Auto formating",
    "text": "Auto formating\n\n\n\nCode\n\ntest.R\n\nstyle_file(\"test.R\")\n\n\n\nStyling  1  files:\n test.R ✔ \n────────────────────────────────────────\nStatus  Count   Legend \n✔   1   File unchanged.\nℹ   0   File changed.\n✖   0   Styling threw an error.\n────────────────────────────────────────\n\n\nAfter\n\n\nCode\nlibrary(\"dplyr\")\n\nGood &lt;- 1\napplePie &lt;- Good + 1\nPeter &lt;- d + 1"
  },
  {
    "objectID": "posts/Rpackage/index.html#check-pacakge-history-on-cran",
    "href": "posts/Rpackage/index.html#check-pacakge-history-on-cran",
    "title": "R pacakge download and managment tool",
    "section": "check pacakge history on cran",
    "text": "check pacakge history on cran\n\n\nCode\npkg_history(\"tibble\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#total-pacakge-download-from-last-week",
    "href": "posts/Rpackage/index.html#total-pacakge-download-from-last-week",
    "title": "R pacakge download and managment tool",
    "section": "total pacakge download from last week",
    "text": "total pacakge download from last week\n\n\nCode\nlibrary(cranlogs)\ncran_downloads(when = \"last-week\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#total-pacakge-download-from-2014",
    "href": "posts/Rpackage/index.html#total-pacakge-download-from-2014",
    "title": "R pacakge download and managment tool",
    "section": "total pacakge download from 2014",
    "text": "total pacakge download from 2014\n\n\nCode\ndata=cran_downloads(from = \"2014-01-01\", to = \"2024-12-31\")\nlibrary(plotly)\nplot_ly(data, x = ~date, y = ~count, mode = \"lines\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#top-pacakge-download-from-last-week",
    "href": "posts/Rpackage/index.html#top-pacakge-download-from-last-week",
    "title": "R pacakge download and managment tool",
    "section": "top pacakge download from last week",
    "text": "top pacakge download from last week\n\n\nCode\ncran_top_downloads(\"last-week\")"
  },
  {
    "objectID": "posts/Rpackage/index.html#one-pacakge-download-from-last-week",
    "href": "posts/Rpackage/index.html#one-pacakge-download-from-last-week",
    "title": "R pacakge download and managment tool",
    "section": "one pacakge download from last week",
    "text": "one pacakge download from last week\n\n\nCode\npacakge_name=\"tibble\"\nlastweek=cran_downloads(when = \"last-week\", package = pacakge_name)\nlastweek\n\n\n\n\nCode\nprint(paste(pacakge_name,\"last week been downloaded\",sum(lastweek$count),\"times\"))"
  }
]